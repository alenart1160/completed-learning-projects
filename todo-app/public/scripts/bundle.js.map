{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAQ,GAINC,EAAY,WACjB,IAAMC,EAAYC,aAAaC,QAAQ,UAEvCF,GAAYG,KAAKC,MAAMJ,EACxB,EAiDAD,ICpDAA,IAIA,ICPMM,EAAc,WACnB,IAAMC,EAASC,SAASC,cAAc,UAChCC,EAAgBX,MAAMY,QAAO,SAACC,GACnC,IAAMC,EAAkBD,EAAKE,KAC3BC,cACAC,SAASC,QAAQC,WAAWH,eACxBI,GAAsBF,QAAQG,gBAAkBR,EAAKS,UAE3D,OAAOR,GAAmBM,CAC3B,IACMG,EAAkBZ,EAAcC,QAAO,SAACC,GAAI,OAAMA,EAAKS,SAAS,IAKtE,GAHAd,EAAOgB,UAAY,GACnBhB,EAAOiB,YAAYC,EAAmBH,IAElCZ,EAAcgB,OAAS,EAC1BhB,EAAciB,SAAQ,SAACf,GACtBL,EAAOiB,YAAYI,EAAgBhB,GACpC,QACM,CACN,IAAMiB,EAAYrB,SAASsB,cAAc,KACzCD,EAAUE,UAAUC,IAAI,iBACxBH,EAAUI,YAAc,8BACxB1B,EAAOiB,YAAYK,EACpB,CACD,EAIMD,EAAkB,SAAChB,GACxB,IAAML,EAASC,SAASsB,cAAc,SAChCI,EAAc1B,SAASsB,cAAc,OACrCK,EAAW3B,SAASsB,cAAc,SAClCM,EAAW5B,SAASsB,cAAc,QAClCO,EAAe7B,SAASsB,cAAc,UA+B5C,OA5BAK,EAASG,aAAa,OAAQ,YAC9BH,EAASI,QAAU3B,EAAKS,UACxBa,EAAYV,YAAYW,GACxBA,EAASK,iBAAiB,UAAU,WACnCC,WAAW7B,EAAK8B,IAChBC,UAAU5C,OACVO,EAAYP,MAAOkB,QACpB,IAGAmB,EAASH,YAAcrB,EAAKE,KAC5BoB,EAAYV,YAAYY,GAGxB7B,EAAOwB,UAAUC,IAAI,aACrBE,EAAYH,UAAUC,IAAI,wBAC1BzB,EAAOiB,YAAYU,GAGnBG,EAAaJ,YAAc,SAC3BI,EAAaN,UAAUC,IAAI,SAAU,gBACrCzB,EAAOiB,YAAYa,GACnBA,EAAaG,iBAAiB,SAAS,WACtCI,WAAWhC,EAAK8B,IAChBC,UAAU5C,OACVO,EAAYP,MAAOkB,QACpB,IAEOV,CACR,EAIMkB,EAAqB,SAACH,GAC3B,IAAMuB,EAAUrC,SAASsB,cAAc,MACjCgB,EAAoC,IAA3BxB,EAAgBI,OAAe,GAAK,IAGnD,OAFAmB,EAAQd,UAAUC,IAAI,cACtBa,EAAQZ,YAAc,YAAHc,OAAezB,EAAgBI,OAAM,SAAAqB,OAAQD,EAAM,SAC/DD,CACR,ECnEAvC,IAGAE,SAASC,cAAc,gBAAgB+B,iBAAiB,SAAS,SAACQ,GACjE/B,QAAQC,WAAa8B,EAAEC,OAAOC,MAC9B5C,GACD,IAGAE,SAASC,cAAc,mBAAmB+B,iBAAiB,UAAU,SAACQ,GACrE/B,QAAQG,cAAgB4B,EAAEC,OAAOV,QACjCjC,GACD,IAGAE,SAASC,cAAc,aAAa+B,iBAAiB,UAAU,SAACQ,GAC/DA,EAAEG,iBACEH,EAAEC,OAAOG,SAAStC,KAAKoC,MAAMG,QAChCtD,MAAMuD,KAAK,CACVZ,GAAIa,OAAOC,aACX1C,KAAMkC,EAAEC,OAAOG,SAAStC,KAAKoC,MAAMG,OACnChC,WAAW,IAKHtB,MHxBVG,aAAauD,QAAQ,QAASrD,KAAKsD,UAAU3D,IGyB7CO,IACA0C,EAAEC,OAAOG,SAAStC,KAAKoC,MAAQ,EAChC,G","sources":["webpack://boilerplate/./src/todos.js","webpack://boilerplate/./src/filters.js","webpack://boilerplate/./src/views.js","webpack://boilerplate/./src/index.js"],"sourcesContent":["// Setup the empty todos array\nlet todos = []\n// loadTodos\n// Arguments: none\n// Return value: none\nconst loadTodos = () => {\n\tconst todosJSON = localStorage.getItem('todos')\n\n\ttodosJSON ? JSON.parse(todosJSON) : []\n}\n// saveTodos\n// Arguments: none\n// Return value: none\nconst saveTodos = () => {\n\tlocalStorage.setItem('todos', JSON.stringify(todos))\n}\n// getTodos\n// Arguments: none\n// Return value: todos array\nconst getTodos = () => todos\n// createTodo\n// Arguments: todo text\n// Return value: none\nconst createTodo = (todosText) => {\n\tconst text = e.target.elements.text.value.trim()\n\te.preventDefault()\n\n\tif (text.length > 0) {\n\t\ttodos.push({\n\t\t\tid: self.crypto.randomUUID(),\n\t\t\ttext,\n\t\t\tcompleted: false,\n\t\t})\n\t\tsaveTodos(todos)\n\t\trenderTodos(todos, filters)\n\t\te.target.elements.text.value = ''\n\t}\n}\n// removeTodo\n// Arguments: id of todo to remove\n// Return value: none\nconst removeTodo = (id) => {\n\tconst todoIndex = todos.findIndex((todo) => todo.id === id)\n\n\tif (todoIndex > -1) {\n\t\ttodos.splice(todoIndex, 1)\n\t}\n}\n// toggleTodo\n// Arguments: id of todo to toggle\n// Return value: none\nconst toggleTodo = (id) => {\n\tconst todo = todos.find((todo) => todo.id === id)\n\n\tif (todo) {\n\t\ttodo.completed = !todo.completed\n\t}\n}\nloadTodos()\n// Make sure to call loadTodos and setup the exports\nexport { loadTodos, saveTodos, getTodos, createTodo, removeTodo, toggleTodo }\n","import { loadTodos } from './todos'\n// Set up filters default object\nconst filters = {\n\tsearchText: '',\n\thideCompleted: false,\n}\nloadTodos()\n// Arguments: none\n// Return value: filters object\n\nconst getFilters = () => filters\n\n// setFilters\n// Arguments: updates object with optional searchText or hideCompleted\n// Return value: none\nconst setFilters = (searchText) => {\n\tconst filteredTodos = todos.filter((todo) => {\n\t\tconst searchTextMatch = todo.text\n\t\t\t.toLowerCase()\n\t\t\t.includes(filters.searchText.toLowerCase())\n\t\tconst hideCompletedMatch = !filters.hideCompleted || !todo.completed\n\n\t\treturn searchTextMatch && hideCompletedMatch\n\t})\n}\n\n// Make sure to set up the exports\nexport { setFilters, getFilters }\n","// renderTodos\n// Arguments: none\n// Return value: none\nconst renderTodos = () => {\n\tconst todoEl = document.querySelector('#todos')\n\tconst filteredTodos = todos.filter((todo) => {\n\t\tconst searchTextMatch = todo.text\n\t\t\t.toLowerCase()\n\t\t\t.includes(filters.searchText.toLowerCase())\n\t\tconst hideCompletedMatch = !filters.hideCompleted || !todo.completed\n\n\t\treturn searchTextMatch && hideCompletedMatch\n\t})\n\tconst incompleteTodos = filteredTodos.filter((todo) => !todo.completed)\n\n\ttodoEl.innerHTML = ''\n\ttodoEl.appendChild(generateSummaryDOM(incompleteTodos))\n\n\tif (filteredTodos.length > 0) {\n\t\tfilteredTodos.forEach((todo) => {\n\t\t\ttodoEl.appendChild(generateTodoDOM(todo))\n\t\t})\n\t} else {\n\t\tconst messageEl = document.createElement('p')\n\t\tmessageEl.classList.add('empty-message')\n\t\tmessageEl.textContent = 'There are no to-dos to show'\n\t\ttodoEl.appendChild(messageEl)\n\t}\n}\n// generateTodoDOM\n// Arguments: todo\n// Return value: the todo element\nconst generateTodoDOM = (todo) => {\n\tconst todoEl = document.createElement('label')\n\tconst containerEl = document.createElement('div')\n\tconst checkbox = document.createElement('input')\n\tconst todoText = document.createElement('span')\n\tconst removeButton = document.createElement('button')\n\n\t// Setup todo checkbox\n\tcheckbox.setAttribute('type', 'checkbox')\n\tcheckbox.checked = todo.completed\n\tcontainerEl.appendChild(checkbox)\n\tcheckbox.addEventListener('change', () => {\n\t\ttoggleTodo(todo.id)\n\t\tsaveTodos(todos)\n\t\trenderTodos(todos, filters)\n\t})\n\n\t// Setup the todo text\n\ttodoText.textContent = todo.text\n\tcontainerEl.appendChild(todoText)\n\n\t// Setup container\n\ttodoEl.classList.add('list-item')\n\tcontainerEl.classList.add('list-item__container')\n\ttodoEl.appendChild(containerEl)\n\n\t// Setup the remove button\n\tremoveButton.textContent = 'remove'\n\tremoveButton.classList.add('button', 'button--text')\n\ttodoEl.appendChild(removeButton)\n\tremoveButton.addEventListener('click', () => {\n\t\tremoveTodo(todo.id)\n\t\tsaveTodos(todos)\n\t\trenderTodos(todos, filters)\n\t})\n\n\treturn todoEl\n}\n// generateSummaryDOM\n// Arguments: incompletedTodos\n// Return value: the summary element\nconst generateSummaryDOM = (incompleteTodos) => {\n\tconst summary = document.createElement('h2')\n\tconst plural = incompleteTodos.length === 1 ? '' : 's'\n\tsummary.classList.add('list-title')\n\tsummary.textContent = `You have ${incompleteTodos.length} todo${plural} left`\n\treturn summary\n}\n// Make sure to set up the exports\nexport { renderTodos, generateTodoDOM, generateSummaryDOM }\n","// Add necessary imports\nimport { setFilters, getFilters } from './filters'\nimport {\n\tloadTodos,\n\tsaveTodos,\n\tgetTodos,\n\tcreateTodo,\n\tremoveTodo,\n\ttoggleTodo,\n} from './todos'\nimport { renderTodos, generateTodoDOM, generateSummaryDOM } from './views'\n// Render initial todos\nrenderTodos()\n\n// Set up search text handler\ndocument.querySelector('#search-text').addEventListener('input', (e) => {\n\tfilters.searchText = e.target.value\n\trenderTodos()\n})\n\n// Set up checkbox handler\ndocument.querySelector('#hide-completed').addEventListener('change', (e) => {\n\tfilters.hideCompleted = e.target.checked\n\trenderTodos()\n})\n\n// Set up form submission handler\ndocument.querySelector('#new-todo').addEventListener('submit', (e) => {\n\te.preventDefault()\n\tif (e.target.elements.text.value.trim()) {\n\t\ttodos.push({\n\t\t\tid: crypto.randomUUID(),\n\t\t\ttext: e.target.elements.text.value.trim(),\n\t\t\tcompleted: false,\n\t\t})\n\t} else {\n\t}\n\n\tsaveTodos(todos)\n\trenderTodos()\n\te.target.elements.text.value = ''\n})\n// Bonus: Add a watcher for local storage\n"],"names":["todos","loadTodos","todosJSON","localStorage","getItem","JSON","parse","renderTodos","todoEl","document","querySelector","filteredTodos","filter","todo","searchTextMatch","text","toLowerCase","includes","filters","searchText","hideCompletedMatch","hideCompleted","completed","incompleteTodos","innerHTML","appendChild","generateSummaryDOM","length","forEach","generateTodoDOM","messageEl","createElement","classList","add","textContent","containerEl","checkbox","todoText","removeButton","setAttribute","checked","addEventListener","toggleTodo","id","saveTodos","removeTodo","summary","plural","concat","e","target","value","preventDefault","elements","trim","push","crypto","randomUUID","setItem","stringify"],"sourceRoot":""}